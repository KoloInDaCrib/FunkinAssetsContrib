
import flixel.FlxG;
import funkin.audio.visualize.ABotVis;
import funkin.graphics.adobeanimate.FlxAtlasSprite;
import funkin.graphics.shaders.AdjustColorShader;
import funkin.graphics.shaders.DropShadowShader;
import funkin.graphics.FunkinSprite;
import funkin.play.boombox.Boombox;

class ABotPixelBoombox extends Boombox {

	var pupilState:Int = 0;

	var PUPIL_STATE_NORMAL = 0;
	var PUPIL_STATE_LEFT = 1;

	var abot:FunkinSprite;
	var abotHead:FlxAtlasSprite;
	var abotSpeaker:FlxAtlasSprite;
	var abotViz:ABotVis;

  function new() {
    super();

		abotHead = FunkinSprite.createSparrow(0, 0, 'characters/abotPixel/abotHead');
		abot = FunkinSprite.createSparrow(0, 0, 'characters/abotPixel/aBotPixelBody');
		abotSpeaker = FunkinSprite.createSparrow(0, 0, 'characters/abotPixel/aBotPixelSpeaker');
		abotBack = FunkinSprite.create(0, 0, 'characters/abotPixel/aBotPixelBack');

		abotHead.scale.set(6, 6);
		abotHead.antialiasing = false;
		abotHead.animation.addByPrefix('toleft', 'toleft0', 24, false);
		abotHead.animation.addByPrefix('toright', 'toright0', 24, false);

		abot.scale.set(6, 6);
		abot.origin.x = Math.round(abot.origin.x);
		abot.origin.y = Math.round(abot.origin.y);
		abot.antialiasing = false;
		abot.animation.addByPrefix('danceLeft', 'danceLeft', 24, false);
		abot.animation.addByPrefix('danceRight', 'danceRight', 24, false);
		abot.animation.addByPrefix('lowerKnife', 'return', 24, false);

		abotSpeaker.scale.set(6, 6);
		abotSpeaker.origin.x = Math.round(abotSpeaker.origin.x);
		abotSpeaker.origin.y = Math.round(abotSpeaker.origin.y);
		abotSpeaker.antialiasing = false;
		// danceLeft and danceRight are identical for the speakers, we can just use 1 of em
		abotSpeaker.animation.addByPrefix('danceLeft', 'danceLeft', 24, false);

		abotBack.scale.set(6.1, 6);
		abotBack.antialiasing = false;

		abotHead.animation.finishCallback = function(name:String):Void {
			if (name == 'toleft') {
				pupilState = PUPIL_STATE_LEFT;
			}

			if (name == 'toright') {
				pupilState = PUPIL_STATE_NORMAL;
			}
		}

		abotViz = new ABotVis(FlxG.sound.music, true);
		FlxG.debugger.track(abotSpeaker);
		// FlxG.debugger.track(abotSpeaker);

    abot.zIndex = 0;

    abotViz.x = abot.x - 160;
    abotViz.y = abot.y + 13;
    abotViz.zIndex = abot.zIndex - 1;

		abotBack.x = abot.x - 55;
		abotBack.y = abot.y + 0;
		abotBack.zIndex = abot.zIndex - 2;

		abotSpeaker.x = abot.x - 78;
		abotSpeaker.y = abot.y + 9;
		abotSpeaker.zIndex = abot.zIndex - 3;

		abotHead.x = abot.x - 325;
		abotHead.y = abot.y + 72;
		abotHead.zIndex = abot.zIndex - 4;

    add(abotHead);
    add(abotSpeaker);
		add(abotBack);
    add(abotViz);
    add(abot);

    this.refresh();
  }

  function addSunsetShaders(){

		var abotSpeakerShader = new DropShadowShader();
		abotSpeakerShader.setAdjustColor(-66, -10, 24, -23);
		abotSpeakerShader.angle = 90;
    abotSpeakerShader.color = 0xFF52351d;
		abotSpeakerShader.distance = 5;
		abotSpeakerShader.antialiasAmt = 0;
		abotSpeakerShader.threshold = 1;

		abotSpeakerShader.attachedSprite = abotSpeaker;
		abotSpeaker.animation.onFrameChange.add(function() {
			abotSpeakerShader.updateFrameInfo(abotSpeaker.frame);
		});

		abotSpeakerShader.loadAltMask('assets/week6/images/weeb/erect/masks/aBotPixelSpeaker_mask.png');
		abotSpeakerShader.maskThreshold = 0;
		abotSpeakerShader.useAltMask = true;

		var noRimShader = new AdjustColorShader();
		noRimShader.hue = -10;
    noRimShader.saturation = -23;
    noRimShader.brightness = -66;
    noRimShader.contrast = 24;

		abot.shader = noRimShader;
		abotBack.shader = noRimShader;
		abotHead.shader = noRimShader;
		abotViz.shader = noRimShader;
		abotSpeaker.shader = abotSpeakerShader;
	}

  /**
	 * Called when the chart hits a song event.
	 */
	public override function onSongEvent(scriptEvent:SongEventScriptEvent)
  {
    super.onSongEvent(scriptEvent);
    if (scriptEvent.eventData.eventKind == "FocusCamera")
    {
      var eventProps = scriptEvent.eventData.value;
      switch (Std.parseInt(eventProps.char)) {
        case 0:
          movePupilsRight();
        case 1:
          movePupilsLeft();
        default:
      }
    }
  }

  function movePupilsLeft():Void {
    if (pupilState == PUPIL_STATE_LEFT) return;
    // trace('Move pupils left');

    abotHead.animation.play('toleft');
  }

  function movePupilsRight():Void {
    if (pupilState == PUPIL_STATE_NORMAL) return;
    // trace('Move pupils right');

    abotHead.animation.play('toright');
  }

  override public function resetPosition():Void
  {
    super.resetPosition();

    abot.x = this.x;
    abot.y = this.y;

    abotViz.x = abot.x - 160;
    abotViz.y = abot.y + 13;

		abotBack.x = abot.x - 55;
		abotBack.y = abot.y + 0;

		abotSpeaker.x = abot.x - 78;
		abotSpeaker.y = abot.y + 9;

		abotHead.x = abot.x - 325;
		abotHead.y = abot.y + 72;
  }

  override function onBeatHit(event:SongTimeScriptEvent)
  {
    super.onBeatHit(event);

		abotSpeaker.animation.play("danceLeft", true);

    var currentNeneState:Int = this.parentCharacter.scriptGet("currentState");
    if (currentNeneState == 0) // Default state.
    {
      if (this.parentCharacter.hasDanced)
      {
				abot.animation.play("danceRight", true);
      }
      else
      {
				abot.animation.play("danceLeft", true);
      }
    }
  }

  override function onSongStart(event:ScriptEvent) {
		abotViz.snd = FlxG.sound.music;
		abotViz.initAnalyzer();
	}

	override function onSongRetry(event:ScriptEvent)
	{
		super.onSongRetry();
		abotViz.dumpSound();
	}
}
